<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>@ViewData["Title"] - Greeno</title>
    <meta name="keywords" content="">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/responsive.css">
    <link rel="icon" href="~/images/fevicon.png" type="image/gif" />
    <link rel="stylesheet" href="~/css/jquery.mCustomScrollbar.min.css">
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.css" media="screen">
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true" />
   
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

</head>
<style>
    body {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }

    main {
        flex: 1;
    }

    footer {
        background-color: white;
    }
</style>
<body>
    @if (ViewData["ShowHeader"] as bool? != false)
    {
        <partial name="_Header" />
    }
    <main>
        @RenderBody()
    </main>
    @if (ViewData["ShowFooter"] as bool? != false)
    {
        <partial name="_Footer" />
    }
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

<script>
    // Hàm để lấy số lượng sản phẩm từ cookie
    function getCartItemCount() {
        const cartItemsCookie = document.cookie.split('; ').find(row => row.startsWith('cartItems='));
        if (cartItemsCookie) {
            const cartItemsValue = JSON.parse(decodeURIComponent(cartItemsCookie.split('=')[1]));
            return cartItemsValue.length;
        }
        return 0;
    }

    // Hàm cập nhật số lượng hiển thị
    function updateCartCount() {
        const count = getCartItemCount();
        const cartCountElement = document.getElementById('cart-count');
        if (cartCountElement) {
            cartCountElement.textContent = count;
        }
    }

    // Thiết lập một hàm để lắng nghe sự thay đổi của cookie
    function setupCartWatcher() {
        // Cập nhật ban đầu
        updateCartCount();

        // Kiểm tra định kỳ mỗi giây
        setInterval(updateCartCount, 1000);

        // Lắng nghe sự kiện storage để cập nhật khi có thay đổi từ tab khác
        window.addEventListener('storage', function (e) {
            if (e.key === 'cartItems') {
                updateCartCount();
            }
        });
    }

    // Khởi tạo watcher khi trang được tải
    document.addEventListener('DOMContentLoaded', setupCartWatcher);
</script>
