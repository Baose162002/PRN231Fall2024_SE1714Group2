@page
@model PRN231_2_EventFlowerExchange_FE.Pages.BatchPages.EditBatchModel
@{
    ViewData["Title"] = "Edit Batch";
}

<div class="container mt-4">
    <h1 class="mb-4">Edit Batch</h1>
    <form id="editBatchForm">
        <input type="hidden" id="batchId" name="batchId">
        <div class="form-group">
            <label for="flowerType">Flower Type</label>
            <input type="text" class="form-control" id="flowerType" name="flowerType" required>
        </div>
        <div class="form-group">
            <label for="pricePerUnit">Price Per Unit</label>
            <input type="number" class="form-control" id="pricePerUnit" name="pricePerUnit" step="0.01" required>
        </div>
        <div class="form-group">
            <label for="description">Description</label>
            <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
        </div>
        <div class="form-group">
            <label for="batchQuantity">Quantity</label>
            <input type="number" class="form-control" id="batchQuantity" name="batchQuantity" required>
        </div>
        <div class="form-group">
            <label for="condition">Condition</label>
            <input type="text" class="form-control" id="condition" name="condition" required>
        </div>
        <div class="form-group">
            <label for="entryDate">Entry Date</label>
            <input type="date" class="form-control" id="entryDate" name="entryDate" required>
        </div>
        <div class="form-group">
            <label for="expirationDate">Expiration Date</label>
            <input type="date" class="form-control" id="expirationDate" name="expirationDate" required>
        </div>
        <button type="submit" class="btn btn-primary">Update Batch</button>
        <a href="/BatchPages/BatchIndex" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const urlParams = new URLSearchParams(window.location.search);
            const batchId = urlParams.get('id');
            const form = document.getElementById('editBatchForm');

            if (batchId) {
                fetch(`@Model.BaseApiUrl/Batch/${batchId}`)
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('batchId').value = data.id;
                        document.getElementById('flowerType').value = data.flowerType;
                        document.getElementById('pricePerUnit').value = data.pricePerUnit;
                        document.getElementById('description').value = data.description;
                        document.getElementById('batchQuantity').value = data.batchQuantity;
                        document.getElementById('condition').value = data.condition;
                        document.getElementById('entryDate').value = new Date(data.entryDate).toISOString().split('T')[0];
                        document.getElementById('expirationDate').value = new Date(data.expirationDate).toISOString().split('T')[0];
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Error loading batch details');
                    });
            }

            form.addEventListener('submit', function (e) {
                e.preventDefault();
                const formData = new FormData(form);
                const batchData = Object.fromEntries(formData.entries());

                fetch(`@Model.BaseApiUrl/Batch/${batchId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(batchData),
                })
                    .then(response => response.text())
                    .then(data => {
                        alert(data);
                        window.location.href = '/BatchPages/BatchIndex';
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                        alert('Error updating batch');
                    });
            });
        });
    </script>
}