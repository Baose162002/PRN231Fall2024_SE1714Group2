@page "/BuyFLowerDetail"
@model PRN231_2_EventFlowerExchange_FE.Pages.FlowerPages.BuyFlowerDetailModel
@{
    ViewData["Title"] = "Flower Details";
}

<section class="py-20">
    <div class="container mx-auto px-4">
        <h2 class="text-3xl font-bold text-black mb-8">Flower Details</h2>

        <div class="bg-white rounded-lg shadow-lg overflow-hidden max-w-4xl mx-auto">
            <div class="md:flex">
                <!-- Flower Image -->
                <img src="@Model.Flower.Image" alt="@Model.Flower.Name" class="w-full h-96 object-cover md:w-1/2">

                <!-- Flower Details -->
                <div class="p-6 md:w-1/2">
                    <h3 class="text-2xl font-bold text-black mb-4">@Model.Flower.Name</h3>
                    <p class="text-gray-700 mb-4">@Model.Flower.Description</p>

                    <p><strong>Price per unit:</strong> $@Model.Flower.PricePerUnit</p>
                    <p><strong>Origin:</strong> @Model.Flower.Origin</p>
                    <p><strong>Color:</strong> @Model.Flower.Color</p>

                    <!-- Batch Information -->
                    <h4 class="text-xl font-bold mt-6">Batch Information</h4>
                    <p><strong>Batch Name:</strong> @Model.Flower.Batch.BatchName</p>
                    <p><strong>Event Name:</strong> @Model.Flower.Batch.EventName</p>
                    <p><strong>Company Name:</strong> @Model.Flower.Batch.Company.CompanyName</p>

                    <!-- Add to Cart Button -->
                    <div class="mt-6">
                        <button class="px-6 py-2 bg-blue-600 text-white font-bold rounded-full hover:bg-blue-700 transition duration-300">
                            Buy
                        </button>
                        <button class="px-6 py-2 bg-blue-600 text-white font-bold rounded-full hover:bg-blue-700 transition duration-300">
                            Add to Cart
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>




    <!-- Review -->
    <!-- Review Section -->
    <div class="py-20 px-4 md:px-6 2xl:px-0 2xl:container 2xl:mx-auto flex justify-center items-center">
        <div class="flex flex-col justify-start items-start w-full space-y-8">
            <div class="flex justify-start items-start">
                <p class="text-3xl lg:text-4xl font-semibold leading-7 lg:leading-9 text-gray-800">Reviews</p>
            </div>

            @if (Model.Reviews != null && Model.Reviews.Any())
            {
                @foreach (var review in Model.Reviews)
                {
                    var timeDifference = DateTime.Now - review.ReviewDate;

                    <div class="w-full flex justify-start items-start flex-col bg-gray-50 p-8">
                        <div class="flex flex-col md:flex-row justify-between w-full">
                            <div class="flex flex-row justify-between items-start">
                                <p class="text-xl md:text-2xl font-medium leading-normal text-gray-800">
                                    @(!string.IsNullOrEmpty(review.CustomerName) ? review.CustomerName : "Anonymous")
                                </p>
                            </div>
                            <div class="cursor-pointer mt-2 md:mt-0">
                                @for (int i = 1; i <= 5; i++) 
                                {
                                    <svg class="inline-block @(i <= review.Rating ? "text-amber-500" : "text-neutral-300")" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.006 5.404.434c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.434 2.082-5.005Z" clip-rule="evenodd" />
                                    </svg>
                                }
                            </div>
                        </div>
                        <div class="mt-3">
                            <p class="text-base leading-normal text-gray-600">@review.Feedback</p>
                        </div>
                        <div class="mt-6 flex justify-start items-center flex-row space-x-2.5">
                            <p class="text-sm leading-none text-gray-600">
                                Review Date: @review.ReviewDate.ToShortDateString()

                                @if (timeDifference.TotalHours <= 24)
                                {
                                    @if (timeDifference.TotalMinutes < 60)
                                    {
                                        <span>(Reviewed @Math.Floor(timeDifference.TotalMinutes) minutes ago)</span>
                                    }
                                    else
                                    {
                                        <span>(Reviewed @Math.Floor(timeDifference.TotalHours) hours ago)</span>
                                    }
                                }
                            </p>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-gray-600">No reviews yet for this flower.</p>
            }


            <!-- New Review Form -->
            <div class="w-full bg-gray-50 p-8">
                <h3 class="text-2xl font-bold mb-4">Write a Review</h3>
                <form asp-page-handler="SubmitReview" asp-route-id="@Model.Flower.FlowerId" method="post" x-data="{ currentVal: 0 }">
                    <input type="hidden" name="FlowerId" value="@Model.Flower.FlowerId" />
                    <div class="mb-4">
                        <label for="rating" class="block text-sm font-medium text-gray-700 mb-2">Rating</label>
                        <div class="flex items-center gap-1">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <label for="@i-Stars" class="cursor-pointer transition hover:scale-125">
                                    <span class="sr-only">@i stars</span>
                                    <input x-model="currentVal" id="@i-Stars" type="radio" class="sr-only" name="Rating" value="@i" required>
                                    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="0 0 24 24" fill="currentColor" class="w-8 h-8" :class="currentVal >= @i ? 'text-amber-500' : 'text-neutral-300'">
                                        <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.006 5.404.434c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.434 2.082-5.005Z" clip-rule="evenodd" />
                                    </svg>
                                </label>
                            }
                        </div>
                    </div>
                    <div class="mb-4">
                        <label for="feedback" class="block text-sm font-medium text-gray-700">Feedback</label>
                        <textarea id="feedback" name="Feedback" rows="3" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" required></textarea>
                    </div>
                    @{
                        var userIdString = HttpContext.Session.GetString("UserId");
                    }

                    @if (!string.IsNullOrEmpty(userIdString))
                    {
                        <!-- Nếu User đã đăng nhập, hiển thị nút "Submit Review" -->
                        <button type="submit" class="px-4 py-2 bg-blue-600 text-white font-bold font-light rounded-md hover:bg-blue-700 transition duration-300">
                            Submit Review
                        </button>
                    }
                    else
                    {
                        <!-- Nếu User chưa đăng nhập, hiển thị nút "Login to Feedback" -->
                        <button type="button" onclick="window.location.href='/Login';" class="px-4 py-2 font-light bg-blue-600 text-white font-bold rounded-md hover:bg-blue-700 transition duration-300">
                            Login to Feedback
                        </button>
                    }

                </form>
            </div>
        </div>
    </div>    <style>
        .carousel-cell {
            width: 150px;
            height: 150px;
            margin-right: 24px;
            counter-increment: carousel-cell;
        }

            .carousel-cell:before {
                display: block;
                width: 20%;
            }

        .flickity-slider {
            position: absolute;
            width: 100%;
            height: 100%;
            left: -260px !important;
        }

        .flickity-button {
            position: absolute !important;
            inset: 0 !important;
            top: 50% !important;
            left: 80% !important;
            background: white;
            border: 0px;
            color: #27272a;
        }

        .flickity-prev-next-button:hover {
            background-color: #27272a;
            color: white;
        }

        .flickity-prev-next-button.previous {
            visibility: hidden;
        }

        .flickity-prev-next-button.next {
            margin-left: 50px;
            width: 48px;
            height: 48px;
            visibility: hidden;
        }

        .flickity-enabled.is-draggable .flickity-viewport {
            cursor: none;
            cursor: default;
        }

        .flickity-prev-next-button .flickity-button-icon {
            margin-left: 2px;
            margin-top: 2px;
            width: 24px;
            height: 24px;
        }
    </style>
    <script>
        let menu = document.getElementById("menu");
        let closeIcon = document.getElementById("closeIcon");
        let openIcon = document.getElementById("openIcon");
        const showMenu = (flag) => {
            if (flag) {
                menu.classList.toggle("hidden");
                closeIcon.classList.toggle("hidden");
                openIcon.classList.toggle("hidden");
            }
        };

        let menu2 = document.getElementById("menu2");
        let closeIcon2 = document.getElementById("closeIcon2");
        let openIcon2 = document.getElementById("openIcon2");
        const showMenu2 = (flag) => {
            if (flag) {
                menu2.classList.toggle("hidden");
                closeIcon2.classList.toggle("hidden");
                openIcon2.classList.toggle("hidden");
            }
        };
    </script>
</section>


@section Scripts {
    <script>
        // Custom scripts can go here if needed.
    </script>
}
