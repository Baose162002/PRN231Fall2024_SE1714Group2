@page "/BuyFLowerDetail"
@model PRN231_2_EventFlowerExchange_FE.Pages.FlowerPages.BuyFlowerDetailModel
@{
    ViewData["Title"] = "Flower Details";
    var currentUserIdString = HttpContext.Session.GetString("UserId");
    int currentUserId = string.IsNullOrEmpty(currentUserIdString) ? -1 : int.Parse(currentUserIdString);
}

<div class="min-h-screen bg-gray-50">
    
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-8">Flower Details</h1>

        @if (Model.Flower != null)
        {
            <div class="bg-white rounded-xl shadow-sm overflow-hidden border border-gray-200">
                <div class="md:flex">
                    <!-- Image Section -->
                    <div class="md:w-1/2">
                        <img src="@(Model.Flower.Image)" alt="@(Model.Flower.Name ?? "Flower")"
                             class="w-full h-96 object-cover">
                    </div>

                    <!-- Details Section -->
                    <div class="md:w-1/2 p-8">
                        <h2 class="text-2xl font-bold text-gray-900">@(Model.Flower.Name ?? "Flower Name Not Available")</h2>
                        <p class="mt-4 text-gray-600">@(Model.Flower.Description ?? "No description available.")</p>

                        @{
                            var cultureInfo = new System.Globalization.CultureInfo("vi-VN");
                        }

                        <!-- Specifications Grid -->
                        <div class="mt-8 grid grid-cols-2 gap-6">
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Price per unit</dt>
                                <dd class="mt-1 text-lg font-semibold text-gray-900">
                                    @Model.Flower.PricePerUnit.ToString("C", cultureInfo)
                                </dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Origin</dt>
                                <dd class="mt-1 text-lg font-semibold text-gray-900">
                                    @(Model.Flower.Origin ?? "Unknown")
                                </dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Color</dt>
                                <dd class="mt-1 text-lg font-semibold text-gray-900">
                                    @(Model.Flower.Color ?? "Not specified")
                                </dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Quantity</dt>
                                <dd class="mt-1 text-lg font-semibold text-gray-900">
                                    @(Model.Flower.RemainingQuantity)
                                </dd>
                            </div>
                        </div>

                        @if (Model.Flower.Batch != null)
                        {
                            <div class="mt-8 border-t border-gray-200 pt-8">
                                <h3 class="text-lg font-semibold text-gray-900">Batch Information</h3>
                                <dl class="mt-4 space-y-3">
                                    <div>
                                        <dt class="text-sm font-medium text-gray-500">Batch Name</dt>
                                        <dd class="mt-1">@(Model.Flower.Batch.BatchName ?? "N/A")</dd>
                                    </div>
                                    <div>
                                        <dt class="text-sm font-medium text-gray-500">Event Name</dt>
                                        <dd class="mt-1">@(Model.Flower.Batch.EventName ?? "N/A")</dd>
                                    </div>
                                    <div>
                                        <dt class="text-sm font-medium text-gray-500">Company Name</dt>
                                        <dd class="mt-1">@(Model.Flower.Batch.Company?.CompanyName ?? "N/A")</dd>
                                    </div>
                                </dl>
                            </div>
                        }

                        <!-- Action Buttons -->
                        @* Render Add to Cart button only if the user role is not Seller *@
                        @if (Model.UserRole != "Seller")
                        {
                          <div class="mt-8 flex gap-4">
                              <form method="post" asp-page-handler="GeneratePaymentUrl">
                                  <button type="submit"
                                          class="inline-flex items-center px-6 py-3 border border-transparent rounded-full
                                                 text-base font-medium text-white bg-green-600 hover:bg-green-700
                                                 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                                      Buy Now
                                  </button>
                                  <input type="hidden" name="flowerId" value="@Model.Flower.FlowerId" />
                              </form>

                              <form id="antiforgeryform" onsubmit="return false;">
                                  @Html.AntiForgeryToken()
                                  <button onclick="addToCart('@Model.Flower.FlowerId', '@Model.Flower.Name', '@Model.Flower.PricePerUnit')"
                                          class="inline-flex items-center px-6 py-3 border border-transparent rounded-full
                                                 text-base font-medium text-white bg-blue-600 hover:bg-blue-700
                                                 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                      Add to Cart
                                  </button>
                              </form>
                          </div>
                        }

                    </div>
                </div>
            </div>


            <!-- Reviews Section -->
            <div class="mt-16">
                <div class="flex justify-between items-center mb-8">
                    <h2 class="text-2xl font-bold text-gray-900">Customer Reviews</h2>
                    <div class="w-64">
                        <label for="starFilter" class="block text-sm font-medium text-gray-700">Filter Reviews</label>
                        <select id="starFilter"
                                class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 rounded-md
                                       focus:outline-none focus:ring-blue-500 focus:border-blue-500">
                            <option value="0">All Ratings</option>
                            <option value="5">5 Stars</option>
                            <option value="4">4 Stars</option>
                            <option value="3">3 Stars</option>
                            <option value="2">2 Stars</option>
                            <option value="1">1 Star</option>
                        </select>
                    </div>
                </div>
                @if (TempData["ErrorMessage"] != null)
                {
                    <div id="errorMessage" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4">
                        <span class="block sm:inline">@TempData["ErrorMessage"]</span>
                    </div>
                }

                @if (TempData["SuccessMessage"] != null)
                {
                    <div id="successMessage" class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4">
                        <span class="block sm:inline">@TempData["SuccessMessage"]</span>
                    </div>
                }
                @if (Model.Reviews != null && Model.Reviews.Any())
                {
                    <div id="reviewsList" class="space-y-6">
                        @foreach (var review in Model.Reviews)
                        {
                            var timeDifference = DateTime.Now - review.ReviewDate;
                            <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6" data-rating="@review.Rating">
                                <div class="flex justify-between items-start">
                                    <div>
                                        <p class="text-lg font-semibold text-gray-900">
                                            @(!string.IsNullOrEmpty(review.CustomerName) ? review.CustomerName : "Anonymous")
                                        </p>
                                        <div class="flex items-center mt-1">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <svg class="w-5 h-5 @(i <= review.Rating ? "text-yellow-400" : "text-gray-300")"
                                                     xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                                </svg>
                                            }
                                        </div>
                                    </div>
                                    @if (review.CustomerId == currentUserId)
                                    {
                                        <div class="relative group">
                                            <button class="p-2 rounded-full hover:bg-gray-100 focus:outline-none">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400"
                                                     fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                          d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z" />
                                                </svg>
                                            </button>
                                            <ul class="bg-white border rounded-lg transform scale-0 group-hover:scale-100
                                                       absolute transition duration-150 ease-in-out origin-top min-w-32
                                                       right-0 mt-2 shadow-lg z-10">
                                                <li class="rounded-lg px-4 py-2 hover:bg-gray-50 cursor-pointer"
                                                    onclick="showUpdateModal(@review.ReviewId, @review.Rating, '@review.Feedback')">
                                                    Edit
                                                </li>
                                                <li class="rounded-lg px-4 py-2 hover:bg-gray-50 cursor-pointer">
                                                    <form method="post" asp-page-handler="DeleteReview"
                                                          asp-route-reviewId="@review.ReviewId"
                                                          asp-route-flowerId="@Model.Flower.FlowerId">
                                                        <button type="submit" class="w-full text-left">Delete</button>
                                                    </form>
                                                </li>
                                            </ul>
                                        </div>
                                    }
                                </div>
                                <p class="mt-4 text-gray-600">@review.Feedback</p>
                                <p class="mt-2 text-sm text-gray-500">
                                    Review Date: @review.ReviewDate.ToShortDateString()
                                    @if (timeDifference.TotalHours <= 24)
                                    {
                                        @if (timeDifference.TotalMinutes < 60)
                                        {
                                            <span>(Reviewed @Math.Floor(timeDifference.TotalMinutes) minutes ago)</span>
                                        }
                                        else
                                        {
                                            <span>(Reviewed @Math.Floor(timeDifference.TotalHours) hours ago)</span>
                                        }
                                    }
                                </p>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 text-center">
                        <p class="text-gray-500">No reviews yet for this flower.</p>
                    </div>
                }

                <!-- Write Review Section -->
                @if (!ModelState.IsValid)
                {
                    <div class="mt-6 bg-red-50 border border-red-200 rounded-lg p-4">
                        @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <p class="text-red-600">@error.ErrorMessage</p>
                        }
                    </div>
                }


                @if (Model?.Flower != null && Model.Flower.Batch != null && Model.Flower.Batch.CompanyId != currentUserId)
                {
                    <div class="mt-8 bg-white rounded-lg shadow-sm border border-gray-200 p-6">
                        <h3 class="text-xl font-bold text-gray-900">Write a Review</h3>
                        <form asp-page-handler="SubmitReview" asp-route-id="@Model.Flower.FlowerId"
                              method="post" x-data="{ currentVal: 0 }" class="mt-6">
                            <input type="hidden" name="FlowerId" value="@Model.Flower.FlowerId" />
                            <div class="space-y-6">
                                <div>
                                    <label for="rating" class="block text-sm font-medium text-gray-700">Rating</label>
                                    <div class="flex items-center gap-2 mt-2">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <label for="@i-Stars" class="cursor-pointer transition hover:scale-110">
                                                <span class="sr-only">@i stars</span>
                                                <input x-model="currentVal" id="@i-Stars" type="radio"
                                                       class="sr-only" name="Rating" value="@i" required>
                                                <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true"
                                                     viewBox="0 0 24 24" fill="currentColor"
                                                     class="w-8 h-8" :class="currentVal >= @i ? 'text-yellow-400' : 'text-gray-300'">
                                                    <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.006 5.404.434c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.434 2.082-5.005Z" clip-rule="evenodd" />
                                                </svg>
                                            </label>
                                        }
                                    </div>
                                </div>
                                <div>
                                    <label for="feedback" class="block text-sm font-medium text-gray-700">Your Review</label>
                                    <textarea id="feedback" name="Feedback" rows="4" required
                                              class="mt-2 block w-full rounded-lg border border-gray-300 shadow-sm
                                                     focus:border-blue-500 focus:ring-blue-500"></textarea>
                                </div>
                                @if (!string.IsNullOrEmpty(HttpContext.Session.GetString("UserId")))
                                {
                                    <button type="submit"
                                            class="inline-flex items-center px-6 py-3 border border-transparent rounded-full
                                                   text-base font-medium text-white bg-blue-600 hover:bg-blue-700
                                                   focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                        Submit Review
                                    </button>
                                }
                                else
                                {
                                    <button type="button" onclick="window.location.href='/Login';"
                                            class="inline-flex items-center px-6 py-3 border border-transparent rounded-full
                                                   text-base font-medium text-white bg-blue-600 hover:bg-blue-700
                                                   focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                        Login to Review
                                    </button>
                                }
                            </div>
                        </form>
                    </div>
                }
                else
                {
                    <p class="mt-6 text-gray-500">You cannot review your own batch.</p>
                }
            </div>
        }
        else
        {
            <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded-lg">
                <div class="flex">
                    <div class="ml-3">
                        <p class="text-sm text-yellow-700">
                            Sorry, we couldn't find the flower you're looking for. It may have been removed or doesn't exist.
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Update Review Modal -->
<div id="updateModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden"
     x-data="{ updateVal: 0 }">
    <div class="relative top-20 mx-auto p-6 border w-96 shadow-xl rounded-xl bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Update Review</h3>
            <form id="updateForm" asp-page-handler="UpdateReview" method="post">
                <input type="hidden" id="updateReviewId" name="reviewId">
                @if (Model?.Flower != null)
                {
                    <input type="hidden" name="FlowerId" value="@Model.Flower.FlowerId" />
                }
                <div class="space-y-6">
                    <div>
                        <label for="updateRating" class="block text-sm font-medium text-gray-700">Rating</label>
                        <div class="flex items-center gap-2 mt-2">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <label for="update-@i-Stars" class="cursor-pointer transition hover:scale-110">
                                    <span class="sr-only">@i stars</span>
                                    <input x-model="updateVal" id="update-@i-Stars" type="radio"
                                           class="sr-only" name="Rating" value="@i" required>
                                    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="0 0 24 24"
                                         fill="currentColor" class="w-8 h-8"
                                         :class="updateVal >= @i ? 'text-yellow-400' : 'text-gray-300'">
                                        <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.006 5.404.434c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.434 2.082-5.005Z" clip-rule="evenodd" />
                                    </svg>
                                </label>
                            }
                        </div>
                    </div>
                    <div>
                        <label for="updateFeedback" class="block text-sm font-medium text-gray-700">Your Review</label>
                        <textarea id="updateFeedback" name="Feedback" rows="4" required
                                  class="mt-2 block w-full rounded-lg border-gray-300 shadow-sm
                                         focus:border-blue-500 focus:ring-blue-500"></textarea>
                    </div>
                    <div class="flex justify-end gap-4">
                        <button type="button" onclick="hideUpdateModal()"
                                class="px-4 py-2 border border-gray-300 rounded-lg text-sm font-medium text-gray-700
                                       hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            Cancel
                        </button>
                        <button type="submit"
                                class="px-4 py-2 border border-transparent rounded-lg text-sm font-medium text-white
                                       bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2
                                       focus:ring-blue-500">
                            Update Review
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showUpdateModal(reviewId, rating, feedback) {
            document.getElementById('updateReviewId').value = reviewId;
            document.getElementById('updateFeedback').value = feedback;
            Alpine.store('updateVal', rating);
            document.getElementById('updateModal').classList.remove('hidden');
        }

        function hideUpdateModal() {
            document.getElementById('updateModal').classList.add('hidden');
        }

        document.getElementById('starFilter').addEventListener('change', function () {
            var selectedRating = this.value;
            var reviews = document.querySelectorAll('#reviewsList > div');

            reviews.forEach(function (review) {
                var reviewRating = review.getAttribute('data-rating');
                if (selectedRating === "0" || reviewRating === selectedRating) {
                    review.classList.remove('hidden');
                } else {
                    review.classList.add('hidden');
                }
            });
        });

        function addToCart(flowerId) {
            // Lấy token từ form
            var token = document.querySelector('#antiforgeryform input[name="__RequestVerificationToken"]').value;

            fetch('/Index?handler=AddToCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify({ flowerId: flowerId })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        updateCartCount(data.cartCount);
                        alert('Item added to cart successfully!'); // Thông báo thành công
                    } else {
                        alert('Failed to add item to cart. Please try again.'); // Thông báo lỗi
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while adding the item to cart.'); // Thông báo lỗi khi có sự cố
                });
        }


        function updateCartCount(count) {
            var cartCountElement = document.getElementById('cart-count');
            if (cartCountElement) {
                cartCountElement.textContent = count;
            }
        }

        window.onload = function () {
            fetch('/Index?handler=GetCartCount')
                .then(response => response.json())
                .then(data => updateCartCount(data.count))
                .catch(error => console.error('Error:', error));
        };
    </script>
}