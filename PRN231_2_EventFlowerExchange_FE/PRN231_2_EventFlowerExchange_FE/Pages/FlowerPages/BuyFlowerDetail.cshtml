@page "/BuyFLowerDetail"
@model PRN231_2_EventFlowerExchange_FE.Pages.FlowerPages.BuyFlowerDetailModel
@{
    ViewData["Title"] = "Flower Details";
    var currentUserIdString = HttpContext.Session.GetString("UserId");
    int currentUserId = string.IsNullOrEmpty(currentUserIdString) ? -1 : int.Parse(currentUserIdString);

}
<style>
    .carousel-cell {
        width: 150px;
        height: 150px;
        margin-right: 24px;
        counter-increment: carousel-cell;
    }

        .carousel-cell:before {
            display: block;
            width: 20%;
        }

    .flickity-slider {
        position: absolute;
        width: 100%;
        height: 100%;
        left: -260px !important;
    }

    .flickity-button {
        position: absolute !important;
        inset: 0 !important;
        top: 50% !important;
        left: 80% !important;
        background: white;
        border: 0px;
        color: #27272a;
    }

    .flickity-prev-next-button:hover {
        background-color: #27272a;
        color: white;
    }

    .flickity-prev-next-button.previous {
        visibility: hidden;
    }

    .flickity-prev-next-button.next {
        margin-left: 50px;
        width: 48px;
        height: 48px;
        visibility: hidden;
    }

    .flickity-enabled.is-draggable .flickity-viewport {
        cursor: none;
        cursor: default;
    }

    .flickity-prev-next-button .flickity-button-icon {
        margin-left: 2px;
        margin-top: 2px;
        width: 24px;
        height: 24px;
    }
</style>
<section class="py-20">
    <div class="container mx-auto px-4">
        <h2 class="text-3xl font-bold text-black mb-8">Flower Details</h2>

        @if (Model.Flower != null)
        {
            <div class="bg-white rounded-lg shadow-lg overflow-hidden max-w-4xl mx-auto">
                <div class="md:flex">
                    <!-- Flower Image -->
                    <img src="@(Model.Flower.Image )" alt="@(Model.Flower.Name ?? "Flower")" class="w-full h-96 object-cover md:w-1/2">

                    <!-- Flower Details -->
                    <div class="p-6 md:w-1/2">
                        <h3 class="text-2xl font-bold text-black mb-4">@(Model.Flower.Name ?? "Flower Name Not Available")</h3>
                        <p class="text-gray-700 mb-4">@(Model.Flower.Description ?? "No description available.")</p>

                        @{
                            var cultureInfo = new System.Globalization.CultureInfo("vi-VN");
                        }
                        <p><strong>Price per unit:</strong> @Model.Flower.PricePerUnit.ToString("C", cultureInfo)</p>
                        <p><strong>Origin:</strong> @(Model.Flower.Origin ?? "Unknown")</p>
                        <p><strong>Color:</strong> @(Model.Flower.Color ?? "Not specified")</p>
                        <p><strong>Quantity:</strong> @(Model.Flower.RemainingQuantity)</p>

                        <!-- Batch Information -->
                        @if (Model.Flower.Batch != null)
                        {
                            <h4 class="text-xl font-bold mt-6">Batch Information</h4>
                            <p><strong>Batch Name:</strong> @(Model.Flower.Batch.BatchName ?? "N/A")</p>
                            <p><strong>Event Name:</strong> @(Model.Flower.Batch.EventName ?? "N/A")</p>
                            <p><strong>Company Name:</strong> @(Model.Flower.Batch.Company?.CompanyName ?? "N/A")</p>
                        }

                        <!-- Add to Cart Button -->
                        <div class="mt-6 flex items-center space-x-4">
                                <form method="post" asp-page-handler="GeneratePaymentUrl">
                                    <button type="submit" class="btn btn-primary">Buy</button>
                                    <input type="hidden" name="flowerId" value="@Model.Flower.FlowerId" />
                                </form>


                            <form id="antiforgeryform" onsubmit="return false;">
                                @Html.AntiForgeryToken()
                                <button onclick="addToCart('@Model.Flower.FlowerId', '@Model.Flower.Name', '@Model.Flower.PricePerUnit')"
                                        class="px-6 py-2 bg-blue-600 text-white font-bold rounded-full hover:bg-blue-700 transition duration-300">
                                    Add to cart
                                </button>
                            </form>
                        </div>

                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4" role="alert">
                <p class="font-bold">Flower Not Found</p>
                <p>Sorry, we couldn't find the flower you're looking for. It may have been removed or doesn't exist.</p>
            </div>
        }
    </div>
</section>


<!-- Review Section -->
<div class="bg-gray-100 p-6 max-w-4xl mx-auto">
    <div class="flex flex-col justify-start items-start w-full space-y-8">
        <div class="flex justify-between items-center w-full">
            <p class="text-3xl lg:text-4xl font-semibold leading-7 lg:leading-9 text-gray-800">Reviews</p>
            <div class="w-64">
                <label for="starFilter" class="block text-sm font-medium text-gray-700">Filter by Star Rating:</label>
                <select id="starFilter" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md">
                    <option value="0">All Ratings</option>
                    <option value="5">5 Stars</option>
                    <option value="4">4 Stars</option>
                    <option value="3">3 Stars</option>
                    <option value="2">2 Stars</option>
                    <option value="1">1 Star</option>
                </select>
            </div>
        </div>

        @if (Model.Reviews != null && Model.Reviews.Any())
        {
            <div id="reviewsList" class="w-full">
                @foreach (var review in Model.Reviews)
                {
                      var timeDifference = DateTime.Now - review.ReviewDate;
                    <div class="w-full bg-white p-4 rounded-lg shadow-md relative mb-4" data-rating="@review.Rating">
                        <div class="absolute top-2 right-2 group">
                        <button class="p-1 rounded-full hover:bg-gray-200 focus:outline-none">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z" />
                            </svg>
                        </button>

                        <!-- Dropdown menu -->   
                        @if (review.CustomerId == currentUserId)
                        {
                        <ul class="bg-white border rounded-sm transform scale-0 group-hover:scale-100 absolute transition duration-150 ease-in-out origin-top min-w-32 right-0 mt-2 shadow-lg">
                         
                                <li class="rounded-sm px-3 py-1 hover:bg-gray-100">
                                    <button onclick="showUpdateModal(@review.ReviewId, @review.Rating, '@review.Feedback')" class="w-full text-left ">
                                        Edit
                                    </button>
                                </li>
                                <li class="rounded-sm px-3 py-1 hover:bg-gray-100">
                                    <form method="post" asp-page-handler="DeleteReview" asp-route-reviewId="@review.ReviewId" asp-route-flowerId="@Model.Flower.FlowerId">
                                        <button type="submit" class="w-full text-left">Delete </button>
                                    </form>
                                </li>

                            </ul>
                        }
                    </div>

                    <div class="flex flex-col md:flex-row justify-between w-full">
                        <div class="flex flex-col">
                            <p class="text-xl font-medium leading-normal text-gray-800">
                                @(!string.IsNullOrEmpty(review.CustomerName) ? review.CustomerName : "Anonymous")
                            </p>
                            <div class="flex flex-row mt-1">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <svg class="w-5 h-5 @(i <= review.Rating ? "text-yellow-400" : "text-gray-300")" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                    </svg>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="mt-3">
                        <p class="text-base leading-normal text-gray-600">@review.Feedback</p>
                    </div>
                    <div class="mt-4 text-sm text-gray-500">
                        Review Date: @review.ReviewDate.ToShortDateString()
                        @if (timeDifference.TotalHours <= 24)
                        {
                            @if (timeDifference.TotalMinutes < 60)
                            {
                                <span>(Reviewed @Math.Floor(timeDifference.TotalMinutes) minutes ago)</span>
                            }
                            else
                            {
                                <span>(Reviewed @Math.Floor(timeDifference.TotalHours) hours ago)</span>
                            }
                        }
                    </div>
                </div>
            }
            </div>
        }
        else
        {
            <p class="text-gray-600">No reviews yet for this flower.</p>
        }

        <!-- New Review Form -->
        @if (Model?.Flower != null && Model.Flower.Batch != null && Model.Flower.Batch.CompanyId != currentUserId)
        {
            <div class="w-full bg-gray-50 p-8">
                <h3 class="text-2xl font-bold mb-4">Write a Review</h3>
                <form asp-page-handler="SubmitReview" asp-route-id="@Model.Flower.FlowerId" method="post" x-data="{ currentVal: 0 }">
                    <input type="hidden" name="FlowerId" value="@Model.Flower.FlowerId" />
                    <div class="mb-4">
                        <label for="rating" class="block text-sm font-medium text-gray-700 mb-2">Rating</label>
                        <div class="flex items-center gap-1">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <label for="@i-Stars" class="cursor-pointer transition hover:scale-125">
                                    <span class="sr-only">@i stars</span>
                                    <input x-model="currentVal" id="@i-Stars" type="radio" class="sr-only" name="Rating" value="@i" required>
                                    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="0 0 24 24" fill="currentColor" class="w-8 h-8" :class="currentVal >= @i ? 'text-amber-500' : 'text-neutral-300'">
                                        <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.006 5.404.434c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.434 2.082-5.005Z" clip-rule="evenodd" />
                                    </svg>
                                </label>
                            }
                        </div>
                    </div>
                    <div class="mb-4">
                        <label for="feedback" class="block text-sm font-medium text-gray-700">Feedback</label>
                        <textarea id="feedback" name="Feedback" rows="3" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" required></textarea>
                    </div>
                    @if (!string.IsNullOrEmpty(HttpContext.Session.GetString("UserId")))
                    {
                        <button type="submit" class="px-4 py-2 bg-blue-600 text-white font-bold font-light rounded-md hover:bg-blue-700 transition duration-300">
                            Submit Review
                        </button>
                    }
                    else
                    {
                        <button type="button" onclick="window.location.href='/Login';" class="px-4 py-2 font-light bg-blue-600 text-white font-bold rounded-md hover:bg-blue-700 transition duration-300">
                            Login to Feedback
                        </button>
                    }
                </form>
            </div>
        }
        else
        {
            <p class="text-gray-600">You cannot review your own batch.</p>
        }

    </div>
</div>

<!-- Update Review Modal -->
<div id="updateModal" style="display: none;" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50" x-data="{ updateVal: 0 }" x-click.self="hideUpdateModal()">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3 text-center">
            <h3 class="text-lg leading-6 font-medium text-gray-900">Update Review</h3>
            <div class="mt-2 px-7 py-3">
                <form id="updateForm" asp-page-handler="UpdateReview" method="post">
                    <input type="hidden" id="updateReviewId" name="reviewId">
                    @if (Model?.Flower != null)
                    {
                        <input type="hidden" name="FlowerId" value="@Model.Flower.FlowerId" />
                    }
                    <div class="mb-4">
                        <label for="updateRating" class="block text-sm font-medium text-gray-700 mb-2">Rating</label>
                        <div class="flex items-center gap-1">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <label for="update-@i-Stars" class="cursor-pointer transition hover:scale-125">
                                    <span class="sr-only">@i stars</span>
                                    <input x-model="updateVal" id="update-@i-Stars" type="radio" class="sr-only" name="Rating" value="@i" required>
                                    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="0 0 24 24" fill="currentColor" class="w-8 h-8" :class="updateVal >= @i ? 'text-amber-500' : 'text-neutral-300'">
                                        <path fill-rule="evenodd" d="M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.006 5.404.434c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.434 2.082-5.005Z" clip-rule="evenodd" />
                                    </svg>
                                </label>
                            }
                        </div>
                    </div>
                    <div class="mb-4">
                        <label for="updateFeedback" class="block text-sm font-medium text-gray-700">Feedback</label>
                        <textarea id="updateFeedback" name="Feedback" rows="3" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" required></textarea>
                    </div>
                    <div class="flex justify-between items-center px-4 py-3">
                        <button type="submit" class="px-4 py-2 bg-blue-500 text-white text-base font-medium rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-300">
                            Update Review
                        </button>
                        <button type="button" onclick="hideUpdateModal()" class="px-4 py-2 bg-gray-500 text-white text-base font-medium rounded-md shadow-sm hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-300">
                            Close
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showUpdateModal(reviewId, rating, feedback) {
            document.getElementById('updateReviewId').value = reviewId;
            document.getElementById('updateFeedback').value = feedback;
            // Set the rating for Alpine.js
            Alpine.store('updateVal', rating);
            // Show the modal
            document.getElementById('updateModal').style.display = 'block';
        }

        function hideUpdateModal() {
            document.getElementById('updateModal').style.display = 'none';
        }
        document.getElementById('starFilter').addEventListener('change', function () {
            var selectedRating = this.value;
            var reviews = document.querySelectorAll('#reviewsList > div');

            reviews.forEach(function (review) {
                var reviewRating = review.getAttribute('data-rating');
                if (selectedRating === "0" || reviewRating === selectedRating) {
                    review.style.display = 'block';
                } else {
                    review.style.display = 'none';
                }
            });
        });



        function addToCart(flowerId, name, pricePerUnit) {
            // Ngăn chặn reload trang
            event.preventDefault();

            // Lấy token từ form
            var token = document.querySelector('#antiforgeryform input[name="__RequestVerificationToken"]').value;

            fetch(`/BuyFlowerDetail?handler=AddToCart&flowerId=${flowerId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify({ flowerId: flowerId })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        updateCartCount(data.cartCount);
                        alert('Item added to cart!');
                    } else {
                        alert('Failed to add item to cart. Please try again.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while adding the item to cart.');
                });
        }

        function updateCartCount(count) {
            var cartCountElement = document.getElementById('cart-count');
            if (cartCountElement) {
                cartCountElement.textContent = count;
            }
        }

        // Call this function when the page loads to update the cart count
        window.onload = function () {
            fetch('/Index?handler=GetCartCount')
                .then(response => response.json())
                .then(data => updateCartCount(data.count))
                .catch(error => console.error('Error:', error));
        };


    </script>
}