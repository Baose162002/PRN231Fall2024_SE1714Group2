@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!-- hero section -->
<section class="relative h-screen flex flex-col items-center justify-center text-center text-white">
    <div class="video-docker absolute top-0 left-0 w-full h-full overflow-hidden">
        <video class="min-w-full min-h-full absolute object-cover"
               src="https://res.cloudinary.com/diuogxamv/video/upload/f_auto:video,q_auto/v1/videoprn/qkaexclnybnhh7aqlyal"
               type="video/mp4" autoplay muted loop playsinline preload="auto" id="bgVideo"></video>
    </div>
    <div class="video-content space-y-2 z-10">
        <h1 class="font-light text-6xl">Event Flower Exchange</h1>
        <h3 class="font-light text-3xl">with TailwindCSS</h3>
    </div>
</section>

<div x-data="cartManager()">
    <!-- main section -->
    <section class="py-20">
        <div class="container mx-auto px-4">
            <h2 class="text-3xl font-bold text-black mb-8">Featured Flowers</h2>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                @if (Model.Flowers != null && Model.Flowers.Count > 0)
                {
                    foreach (var flower in Model.Flowers)
                    {
                        <div class="bg-white rounded-lg shadow-md overflow-hidden">
                            <a href="/BuyFlowerDetail?id=@flower.FlowerId">
                                <img src="@flower.Image" alt="@flower.Name" class="w-full h-64 object-cover">
                            </a>
                            <div class="p-6">
                                <a href="/BuyFlowerDetail?id=@flower.FlowerId">
                                    <h3 class="text-xl font-bold text-black mb-2">@flower.Name</h3>
                                </a>
                                <p class="text-gray-700 text-base">@flower.Description</p>
                                <div class="mt-4 flex items-center justify-between">
                                    <span class="text-gray-700 font-medium">$@flower.PricePerUnit</span>
                                    <button x-on:click="addToCart(@flower.FlowerId, '@flower.Name', @flower.PricePerUnit)"
                                            class="px-4 py-2 bg-blue-600 text-white font-bold rounded-full hover:bg-blue-700 transition duration-200">
                                        Add to cart
                                    </button>
                                </div>
                                <p><strong>Origin:</strong> @flower.Origin</p>
                                <p><strong>Color:</strong> @flower.Color</p>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No flowers available.</p>
                }
            </div>
        </div>
    </section>

    <!-- Gallery section (unchanged) -->
    <div class="bg-white h-screen h-full py-6 sm:py-8 lg:py-12">
        <!-- ... (gallery content remains the same) ... -->
    </div>
</div>

<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js" defer></script>
<script>
    function cartManager() {
        return {
            cartItems: [],
            init() {
                const storedCart = this.getCookie('cartItems');
                if (storedCart) {
                    this.cartItems = JSON.parse(storedCart);
                }
                this.updateCartCount();
            },
            addToCart(flowerId, name, price) {
                const existingItem = this.cartItems.find(item => item.FlowerId === flowerId);
                if (existingItem) {
                    existingItem.Quantity++;
                } else {
                    this.cartItems.push({ FlowerId: flowerId, Name: name, PricePerUnit: price, Quantity: 1 });
                }
                this.updateCookie();
                this.updateCartCount();
            },
            updateCookie() {
                document.cookie = `cartItems=${JSON.stringify(this.cartItems)}; path=/; max-age=86400`;
            },
            getCookie(name) {
                const value = `; ${document.cookie}`;
                const parts = value.split(`; ${name}=`);
                if (parts.length === 2) return parts.pop().split(';').shift();
            },
            updateCartCount() {
                const totalCount = this.cartItems.reduce((total, item) => total + item.Quantity, 0);
                document.getElementById('cart-count').textContent = totalCount;
            }
        }
    }
</script>